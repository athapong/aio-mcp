# Smithery configuration file: https://smithery.ai/docs/config#smitheryyaml

startCommand:
  type: stdio
  configSchema:
    # JSON Schema defining the configuration options for the MCP.
    type: object
    required:
      - braveApiKey
      - gitlabHost
      - gitlabToken
      - atlassianHost
      - atlassianEmail
      - atlassianToken
    properties:
      enableTools:
        type: string
        description: Comma separated list of tools group to enable. Leave empty to
          enable all tools.
      qdrantHost:
        type: string
        description: Qdrant host URL
      atlassianHost:
        type: string
        description: Atlassian host URL
      atlassianEmail:
        type: string
        description: Email for Atlassian
      gitlabHost:
        type: string
        description: GitLab host URL
      gitlabToken:
        type: string
        description: Token for GitLab access
      braveApiKey:
        type: string
        description: API key for Brave
      atlassianToken:
        type: string
        description: Token for Atlassian access
      googleAiApiKey:
        type: string
        description: API key for Google AI
      proxyUrl:
        type: string
        description: Proxy URL if required
      openaiApiKey:
        type: string
        description: API key for OpenAI
      qdrantPort:
        type: string
        description: Port for Qdrant service
      googleTokenFile:
        type: string
        description: Path to Google token file
      googleCredentialsFile:
        type: string
        description: Path to Google credentials file
      qdrantApiKey:
        type: string
        description: API key for Qdrant
      openaiBaseUrl:
      type: string
      description: Base URL for OpenAI API
    openaiEmbeddingModel:
      type: string
      description: Model name for OpenAI embeddings
    googleMapsApiKey:
      type: string
      description: API key for Google Maps
    deepseekApiKey:
      type: string
      description: API key for Deepseek
    useOllamaDeepseek:
      type: string
      description: Flag to use Ollama Deepseek
    useOpenrouter:
      type: string
      description: Flag to use OpenRouter
    openrouterApiKey:
      type: string
      description: API key for OpenRouter
    enableSse:
      type: string
      description: Flag to enable SSE server (true/false)
    sseAddr:
      type: string
      description: Address for SSE server to listen on (e.g., :8080)
    sseBasePath:
      type: string
      description: Base path for SSE endpoints (e.g., /mcp)
  commandFunction:
    # A function that produces the CLI command to start the MCP on stdio.
    |-
    (config) => {
      const args = ['-env', '/path/to/.env'];

      // Add SSE-related args if SSE is enabled
      if (config.enableSse === 'true') {
        args.push('-sse');
        if (config.sseAddr) {
          args.push('-sse-addr', config.sseAddr);
        }
        if (config.sseBasePath) {
          args.push('-sse-base-path', config.sseBasePath);
        }
      }

      return {
        command: './all-in-one-model-context-protocol',
        args: args,
        env: {
          ENABLE_TOOLS: config.enableTools,
          QDRANT_HOST: config.qdrantHost,
          QDRANT_PORT: config.qdrantPort,
          QDRANT_API_KEY: config.qdrantApiKey,
          ATLASSIAN_HOST: config.atlassianHost,
          ATLASSIAN_EMAIL: config.atlassianEmail,
          ATLASSIAN_TOKEN: config.atlassianToken,
          GITLAB_HOST: config.gitlabHost,
          GITLAB_TOKEN: config.gitlabToken,
          BRAVE_API_KEY: config.braveApiKey,
          GOOGLE_AI_API_KEY: config.googleAiApiKey,
          PROXY_URL: config.proxyUrl,
          OPENAI_API_KEY: config.openaiApiKey,
          OPENAI_BASE_URL: config.openaiBaseUrl,
          OPENAI_EMBEDDING_MODEL: config.openaiEmbeddingModel,
          GOOGLE_TOKEN_FILE: config.googleTokenFile,
          GOOGLE_CREDENTIALS_FILE: config.googleCredentialsFile,
          GOOGLE_MAPS_API_KEY: config.googleMapsApiKey,
          DEEPSEEK_API_KEY: config.deepseekApiKey,
          USE_OLLAMA_DEEPSEEK: config.useOllamaDeepseek,
          USE_OPENROUTER: config.useOpenrouter,
          OPENROUTER_API_KEY: config.openrouterApiKey,
          ENABLE_SSE: config.enableSse,
          SSE_ADDR: config.sseAddr,
          SSE_BASE_PATH: config.sseBasePath
        }
      };
    }

